
@using PagedList
@using PagedList.Mvc
@model IPagedList<SePantry_1.Models.Active_Product>
@*@model PagedList.IPagedList<SePantry_1.Models.Active_Product>*@
           
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Product Inventory";
}
<p>       
    @using (Html.BeginForm()){   
<p align="right">
    <input class="searchbox" type="search" name="SearchString" placeholder="Search Inventory.." />
    <input class="search" type="submit" value="Search" /><br />
    </p>
    }
     
@if (Roles.GetRolesForUser().Contains("Admin")) {
@Html.ActionLink("Add a product to Inventory", "Create")
}
<p><br /></p>
<table class="table">
    <tr>
        <th>
           @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th class="cap-name">
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm1 })
        </th>
        <th>
            @Html.ActionLink("Manufacturer", "Index", new { sortOrder = ViewBag.NameSortParm2})
        </th>
        <th>
            @Html.ActionLink("Canned", "Index", new { sortOrder = ViewBag.NameSortParm3 })
          
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.category)
            </td>
            <td class="cap-name">
                @Html.DisplayFor(modelItem => item.title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isCanned)
            </td>
@if (Roles.GetRolesForUser().Contains("Admin")) {
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
}
        </tr>
    }
</table>

<div class="page">
    < Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>