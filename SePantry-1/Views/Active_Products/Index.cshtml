
@using PagedList
@using PagedList.Mvc
@model IPagedList<SePantry_1.Models.Active_Product>
@*@model PagedList.IPagedList<SePantry_1.Models.Active_Product>*@
           
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Product Inventory";
}

<h2>Product Inventory - Active products</h2>

<p>  
     
    @using (Html.BeginForm()){   
<p align="right">
    Search Inventory: @Html.TextBox("SearchString") 
    <input type="submit" value="Search" /><br />
    </p>
    }
<p> </p>
     

@Html.ActionLink("Add product to Inventory", "Create")
<p><br /></p>
<table class="table">
    <tr>
        <th>
           @Html.ActionLink("category", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("title", "Index", new { sortOrder = ViewBag.NameSortParm1 })
        </th>
        <th>
            @Html.ActionLink("manufacturer", "Index", new { sortOrder = ViewBag.NameSortParm2})
        </th>
        <th>
            @Html.ActionLink("isCanned", "Index", new { sortOrder = ViewBag.NameSortParm3 })
          
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isCanned)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
<br /> <br />
< Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
