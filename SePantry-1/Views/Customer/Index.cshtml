@using PagedList
@using PagedList.Mvc
@model IPagedList<SePantry_1.Models.Customer>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Customers List";
}
<p>

    @using (Html.BeginForm())
    {
    <p align="right">
        Search Customers: @Html.TextBox("SearchString")
        <input type="submit" value="Search" /><br />
    </p>
    }
   <p> </p>

   <h2>Customers List</h2>
    <p><br /></p>
<p>
    @Html.ActionLink("Create New Customer", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("firstName", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("lastName", "Index", new { sortOrder = ViewBag.NameSortParm1 })
        </th>
        <th>
            @Html.ActionLink("emailAddress", "Index", new { sortOrder = ViewBag.NameSortParm2 })
        </th>
        <th>
            @Html.ActionLink("wNumber", "Index", new { sortOrder = ViewBag.NameSortParm3 })
        </th>
        <th>
            @Html.ActionLink("password", "Index", new { sortOrder = ViewBag.NameSortParm4 })
        </th>
        <th></th>
    </tr>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.firstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.lastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.emailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.wNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.password)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<br /> <br />
< Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))